---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SharkSync.Web.Api Stack
Resources:
  WebApiLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      RoleName: 'web-api-lambda-role'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  WebApiLambdaRoleInlinePolicy:
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyName: "web-api-policy"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: Allow
            Resource: ["*"]
            Action: ["secretsmanager:*", "dynamodb:*"]
      Roles: 
        - Ref: "WebApiLambdaRole"
  WebApiServerless:
    Type: AWS::Serverless::Function
    Properties:
      Handler: SharkSync.Web.Api::SharkSync.Web.Api.LambdaEntryPoint::FunctionHandlerAsync
      Runtime: dotnetcore2.0
      CodeUri: ''
      MemorySize: 256
      Timeout: 30
      Role: !GetAtt WebApiLambdaRole.arn
      Events:
        ApiProxy:
          Type: Api
          Properties:
            Path: "/{proxy+}"
            Method: ANY
